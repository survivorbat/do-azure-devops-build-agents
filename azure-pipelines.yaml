trigger:
  branches:
    include:
      - master
  paths:
    include:
      - terraform
      - ansible
      - azure-pipelines.yaml

variables:
  # Location of terraform code
  terraformDirectory: "$(Build.SourcesDirectory)/terraform"

  # apiToken: <secret> # This is setup in pipeline variables!
  # azureDevOpsAccountName: <secret> # This is setup in pipeline variables!
  # azureDevOpsSecretKey: <secret> # This is setup in pipeline variables!
  # terraformBackendBucket: <secret> # This is setup in pipeline variables!
  # terraformBackendKey: <secret> # This is setup in pipeline variables!
  # doAccessKey: <secret> # This is setup in pipeline variables!
  # doSecretKey: <secret> # This is setup in pipeline variables!

  # Amount of agents
  # dropletAmount: <value> # This is setup in pipeline variables!

  # Droplet size
  dropletSize: s-1vcpu-1gb

  # Droplet region
  dropletRegion: ams3

jobs:
  - job: Setup
    displayName: Setup Infrastructure
    steps:
      - bash: |
          python3 -m pip install --upgrade pip setuptools wheel

          pip3 install ansible

          ansible-galaxy install -r ansible/requirements.yaml
        displayName: Install ansible and requirements

      - task: qetza.replacetokens.replacetokens-task.replacetokens@3
        displayName: 'Replace tokens in terraform/*.tf'
        inputs:
          targetFiles: 'terraform/*.tf'
          tokenPrefix: '__'
          tokenSuffix: '__'

      - task: TerraformCLI@0
        inputs:
          command: 'init'
          commandOptions: $(terraformDirectory)
        displayName: Init $(terraformDirectory)

      - task: TerraformCLI@0
        inputs:
          command: 'validate'
          commandOptions: $(terraformDirectory)
        displayName: Validate $(terraformDirectory)

      - task: TerraformCLI@0
        inputs:
          command: 'plan'
          commandOptions: $(terraformDirectory)
        displayName: Plan $(terraformDirectory)

      - task: TerraformCLI@0
        inputs:
          command: 'apply'
          commandOptions: $(terraformDirectory)
        displayName: Apply $(terraformDirectory)
